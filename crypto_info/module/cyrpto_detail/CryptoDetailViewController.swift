//
//  CryptoDetailViewController.swift
//  crypto_info
//
//  Created Phattarapon Jungtakarn on 18/8/2566 BE.
//  Copyright © 2566 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class CryptoDetailViewController: UIViewController {

	var presenter: CryptoDetailPresenterProtocol?
    var nameCrypto: String = "-"

    @IBOutlet weak var viewContainer: UIView!
    
    @IBOutlet weak var prevPriceLabel: UILabel!
    @IBOutlet weak var priceLabel: UILabel!
    @IBOutlet weak var percentChangePriceLabel: UILabel!
    
    @IBOutlet weak var prevMarketCapLabel: UILabel!
    @IBOutlet weak var marketCapLabel: UILabel!
    @IBOutlet weak var percentChangeMarketCapLabel: UILabel!
    
    @IBOutlet weak var prevVolumeLabel: UILabel!
    @IBOutlet weak var volumeLabel: UILabel!
    @IBOutlet weak var percentChangeVolumeLabel: UILabel!
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.initUI()
    }
    
    func initUI() {
        self.setupNavbar()
        self.viewContainer.layer.cornerRadius = 15
        self.viewContainer.layer.borderWidth = 1
        self.viewContainer.layer.borderColor = UIColor.black.cgColor
    }
    
    func setupNavbar() {
        self.navigationController?.navigationBar.isHidden = false
        self.navigationItem.title = self.nameCrypto
        
        let imageBack = UIImage(named: "ic_back_blue")?.tinted(with: UIColor.black)
        
        let leftBarButton = UIBarButtonItem(
            image: imageBack?.withRenderingMode(.alwaysOriginal),
            style: .plain,
            target: self,
            action: #selector(onClickBackButton)
        )
        
        leftBarButton.setTitleTextAttributes([
            NSAttributedString.Key.font : UIFont.systemFont(ofSize: 25.0),
            NSAttributedString.Key.foregroundColor : UIColor.gray,
        ], for: .normal)
        
        self.navigationItem.leftBarButtonItems = [leftBarButton]
    }
    
    @objc func onClickBackButton() {
        self.presenter?.notifyRouteToMain()
    }

}

extension CryptoDetailViewController: CryptoDetailViewProtocol {
    
    func displayHeaderNameCrypto(name: String) {
        self.nameCrypto = name
    }
    
    func displayHistoryCryptoData(historyData: CryptoHistoryDisplayEntity) {
        if let percentChangePriceIsNegative = self.presenter?.checkIsNegative(value: historyData.percent_change_price) as? Bool,
           let percentChangeMarketCapIsNegative = self.presenter?.checkIsNegative(value: historyData.percent_market_cap),
           let percentChangeVolumeIsNegative = self.presenter?.checkIsNegative(value: historyData.percent_volume) {
            
            if percentChangePriceIsNegative {
                self.percentChangePriceLabel.textColor = UIColor.red
            } else {
                self.percentChangePriceLabel.textColor = UIColor.green
            }
            
            if percentChangeMarketCapIsNegative {
                self.percentChangeMarketCapLabel.textColor = UIColor.red
            } else {
                self.percentChangeMarketCapLabel.textColor = UIColor.green
            }
            
            if percentChangeVolumeIsNegative {
                self.percentChangeVolumeLabel.textColor = UIColor.red
            } else {
                self.percentChangeVolumeLabel.textColor = UIColor.green
            }
            
            self.prevPriceLabel.text = "\(historyData.pervious_price)" + "$"
            self.priceLabel.text = "\(historyData.price)" + "$"
            self.percentChangePriceLabel.text = "\(historyData.percent_change_price)" + "%"
            self.prevMarketCapLabel.text = "\(historyData.pervious_market_cap)" + "$"
            self.marketCapLabel.text = "\(historyData.market_cap)" + "$"
            self.percentChangeMarketCapLabel.text = "\(historyData.percent_market_cap)" + "%"
            self.prevVolumeLabel.text = "\(historyData.pervious_volume)" + "$"
            self.volumeLabel.text = "\(historyData.volume)" + "$"
            self.percentChangeVolumeLabel.text = "\(historyData.percent_volume)" + "%"
        } else {
            self.displayAlert(title: "Alert!", message: "Something Wrong.")
        }
    }
    
    func displayAlert(title: String, message: String) {
        let alert = UIAlertController(title: title, message: message, preferredStyle: .alert)
        alert.addAction(UIAlertAction(title: "OK", style: UIAlertAction.Style.cancel, handler: nil))
        
        self.present(alert, animated: true)
    }
    
}
